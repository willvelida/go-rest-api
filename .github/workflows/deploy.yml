name: 'Deploy Go REST API sample'

on:
  push:
    branches:
      - "main"

jobs:
  # Adding job for terraform
  deploy-terraform:
    name: 'Deploy terraform file'
    runs-on: ubuntu-latest
    environment: Production
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    
    defaults:
      run:
        shell: bash
        working-directory: infra
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'AZ Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.5
      
      - name: 'Terraform Format'
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: 'Terraform Init'
        id: init
        run: terraform init

      - name: 'Terraform Validate'
        id: validate
        run: terraform validate -no-color -var="rg_name=${{ secrets.RG_NAME }}" -var="location=${{ secrets.LOCATION }}" -var="asp_name=${{ secrets.ASP_NAME }}" -var="app_name=${{ secrets.APP_NAME }}"
        continue-on-error: false

      - name: 'Terraform Plan'
        id: plan
        run: terraform plan -no-color -var="rg_name=${{ secrets.RG_NAME }}" -var="location=${{ secrets.LOCATION }}" -var="asp_name=${{ secrets.ASP_NAME }}" -var="app_name=${{ secrets.APP_NAME }}"
        continue-on-error: false

      - name: 'Terraform Plan Status'
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -var="rg_name=${{ secrets.RG_NAME }}" -var="location=${{ secrets.LOCATION }}" -var="asp_name=${{ secrets.ASP_NAME }}" -var="app_name=${{ secrets.APP_NAME }}"

  deploy-app-service:
    name: 'Deploy Go API'
    needs: 'deploy-terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'AZ Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Setup Go'
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
          cache: true

      - name: 'Build Project'
        run: go build . -v
        continue-on-error: false

      - name: 'Test project'
        working-directory: test
        run: go test -v .
        continue-on-error: false
